[{"C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\index.js":"1","C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\App.js":"2","C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\reportWebVitals.js":"3","C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\components\\Navbar.js":"4","C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\components\\Users.js":"5","C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\components\\Blockchain.js":"6","C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\components\\Home.js":"7","C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\components\\Miner.js":"8"},{"size":500,"mtime":1607274107464,"results":"9","hashOfConfig":"10"},{"size":851,"mtime":1607274846000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1205,"mtime":1607251824783,"results":"13","hashOfConfig":"10"},{"size":4794,"mtime":1607280882181,"results":"14","hashOfConfig":"10"},{"size":6075,"mtime":1607273152810,"results":"15","hashOfConfig":"10"},{"size":527,"mtime":1607217931372,"results":"16","hashOfConfig":"10"},{"size":4768,"mtime":1607273221872,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1grmtg7",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\index.js",[],["37","38"],"C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\App.js",[],"C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\reportWebVitals.js",[],"C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\components\\Navbar.js",[],"C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\components\\Users.js",[],"C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\components\\Blockchain.js",["39"],"import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default class Blockchain extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.deleteBlockchain= this.deleteBlockchain.bind(this);\r\n\r\n\r\n\r\n        this.state={\r\n            chain: [],\r\n            difficulty: 0,\r\n            pendingTransactions: [],\r\n            miningReward: 100,\r\n            fromAddress:'',\r\n            toAddress:'',\r\n            amount:0\r\n        }\r\n    }\r\n    async componentDidMount(){\r\n        await axios.get('http://localhost:4000/blockchain')\r\n            .then(res=>{\r\n                if(typeof res.data.difficulty !== 'undefined'){\r\n                    this.setState({\r\n                        chain:res.data.chain,\r\n                        difficulty:res.data.difficulty,\r\n                        pendingTransactions:res.data.pendingTransactions,\r\n                        miningReward:res.data.miningReward\r\n                    })\r\n                }\r\n                //else - no blockchain created yet\r\n            })\r\n    }\r\n\r\n    onFromAddressChange = (fromAddress) =>{\r\n        this.setState({fromAddress});\r\n    }\r\n\r\n    onToAddressChange = (toAddress) =>{\r\n        this.setState({toAddress});\r\n    }\r\n\r\n    onAmountChange = (amount) =>{\r\n        this.setState({amount});\r\n    }\r\n\r\n    async onSubmit(e){\r\n        await e.preventDefault();\r\n        const data = {\r\n            amount: this.state.amount,\r\n            fromAddress: this.state.fromAddress,\r\n            toAddress: this.state.toAddress\r\n        }\r\n        await axios.post('http://localhost:4000/blockchain',data)\r\n            .then(res=>{\r\n                console.log(res)\r\n                this.setState({\r\n                    chain:res.data.chain,\r\n                    difficulty: res.data.difficulty,\r\n                    pendingTransactions: res.data.pendingTransactions,\r\n                    miningReward: res.data.miningReward,\r\n                    fromAddress:res.data.fromAddress,\r\n                    toAddress:res.data.toAddress,\r\n                    amount:res.data.amount\r\n                })\r\n            })\r\n            .catch(err=>console.error(err))\r\n    }\r\n\r\n\r\n    async deleteBlockchain(e){\r\n        console.log(\"Deleted\")\r\n        await axios.delete('http://localhost:4000/blockchain')\r\n            .then(res=>{\r\n                this.setState({\r\n                    chain: [],\r\n                    difficulty: 0,\r\n                    pendingTransactions: [],\r\n                    miningReward: 100,\r\n                    fromAddress:'',\r\n                    toAddress:'',\r\n                    amount:0                    \r\n                });\r\n            })\r\n            .catch(err=>{\r\n                \r\n                console.error(err);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"this.state = \",this.state)\r\n        if(this.state.difficulty !== 0){\r\n            return (\r\n                <div style={{backgroundColor: 'blue',width: '100%',height: '2000px'}}>\r\n\r\n                <h1>\r\n                    Add transaction\r\n                </h1>\r\n                <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input type=\"text\" name={this.state.fromAddress} className=\"formStyle\" placeholder=\"From address - public key (required)\" required onChange={e => this.onFromAddressChange(e.target.value)}/>\r\n                    <input type=\"text\" name={this.state.toAddress} className=\"formStyle\" placeholder=\"To address - public key (required)\" required onChange={e =>this.onToAddressChange(e.target.value)}/>\r\n                    <input type=\"number\" name={this.state.amount} className=\"formStyle\" placeholder=\"Amount (required)\" required onChange={e => this.onAmountChange(e.target.value)}></input>\r\n                    <button type=\"submit\" className=\"formButton\">Add</button>\r\n                </form>\r\n                </div>\r\n                    <div>\r\n                        <h4 style={{color:'white'}}>difficulty: {this.state.difficulty}</h4>\r\n                        <h4 style={{color:'white'}}>Total blocks in the chain:{this.state.chain.length}</h4>\r\n                        <h4 style={{color:'white'}}>Pending TXs: {this.state.pendingTransactions.length}</h4>\r\n                        <button type=\"submit\" onClick={this.deleteBlockchain} className=\"btn btn-primary a-btn-slide-text\">\r\n                            <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\r\n                            <span><strong>Delete all the blockchain</strong></span>            \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div style={{backgroundColor: 'blue',width: '100%',height: '2000px'}}>\r\n                    <h1>\r\n                        Add transaction (the blockchain will be created automatically)\r\n                    </h1>\r\n                    <div>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <input type=\"text\" name={this.state.fromAddress} className=\"formStyle\" placeholder=\"From address - public key (required)\" required onChange={e => this.onFromAddressChange(e.target.value)}/>\r\n                            <input type=\"text\" name={this.state.toAddress} className=\"formStyle\" placeholder=\"To address - public key (required)\" required onChange={e =>this.onToAddressChange(e.target.value)}/>\r\n                            <input type=\"number\" name={this.state.amount} className=\"formStyle\" placeholder=\"Amount (required)\" required onChange={e => this.onAmountChange(e.target.value)}></input>\r\n                            <button type=\"submit\" className=\"formButton\">Add</button>\r\n                        </form>\r\n                    </div>\r\n                    <h4 style={{color:'white'}}>Total pending TXs: {this.state.pendingTransactions.length}</h4>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n","C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\components\\Home.js",["40"],"import React, { Component } from 'react'\r\nimport joker from '../images/joker.png'\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{backgroundColor: 'blue',width: '100%',height: '2000px'}}>\r\n                <h1 style={{color:'white'}}>Welcome to j00k3r c01n</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n/*\r\nstyle={{\r\n    width:'100%',height:'800px',backgroundColor:'black', backgroundImage: `url(\"${joker}\")`,backgroundRepeat: 'no-repeat',backgroundSize:'cover'\r\n}}>*/","C:\\Users\\אור\\Desktop\\Blockchain\\Blockchain-code\\client\\src\\components\\Miner.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":9,"nodeType":"47","messageId":"48","endLine":2,"endColumn":13},{"ruleId":"45","severity":1,"message":"49","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":13},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'joker' is defined but never used.","no-global-assign","no-unsafe-negation"]